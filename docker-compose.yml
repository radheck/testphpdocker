version: '3'
services:
  proxy:
    hostname: proxy
    image: jwilder/nginx-proxy
    container_name: proxydaw
    ports:
      - '80:80'
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./nginx-proxy:/etc/nginx/vhost.d:ro
      - './conf/my_custom_proxy_settings.conf:/etc/nginx/conf.d/my_custom_proxy_settings.conf:ro'
    networks:
      - frontend
  db:
    hostname: db
    image: mysql:5.7
    container_name: dbdaw
    ports:
      - '3306:3306'
    volumes:
      - ./data/db:/var/lib/mysql
      - ./init-db:/docker-entrypoint-initdb.d
    environment:
      - MYSQL_ROOT_PASSWORD=password
      - MYSQL_DATABASE=demo
      - MYSQL_USER=dbuser
      - MYSQL_PASSWORD=secret
    networks:
      - frontend
      - backend
  ejercicios:
    build: ./dockerfiles/introduccionphp
    container_name: ejercicios
    hostname: ejercicios
    volumes:
      - ./data/ejercicios:/var/www/html
    depends_on:
      - db
    environment:
      - VIRTUAL_HOST=ejercicios.local,www.ejercicios.local
    restart: always
    networks:
      - frontend
      - backend
  mvc:
    build: ./dockerfiles/mvc
    container_name: mvc
    hostname: mvc
    volumes:
      - ./data/mvc:/var/www/html
    depends_on:
      - db
    environment:
      - VIRTUAL_HOST=mvc.local,www.mvc.local
    restart: always
    networks:
      - frontend
      - backend      
  mvc:
    build: ./dockerfiles/mvc
    container_name: mvc
    hostname: mvc
    volumes:
      - ./data/mvc:/var/www/html
    depends_on:
      - db
    environment:
      - VIRTUAL_HOST=mvc.local,www.mvc.local
    restart: always
    networks:
      - frontend
      - backend      
  taller:
    build: ./dockerfiles/mvc
    container_name: taller
    hostname: taller
    volumes:
      - ./data/taller:/var/www/html
    depends_on:
      - db
    environment:
      - VIRTUAL_HOST=taller.local
    restart: always
    networks:
      - frontend
      - backend      
  taller2:
    build: ./dockerfiles/mvc
    container_name: taller2
    hostname: taller2
    volumes:
      - ./data/taller2:/var/www/html
    depends_on:
      - db
    environment:
      - VIRTUAL_HOST=taller2.local
    restart: always
    networks:
      - frontend
      - backend      
  penya:
    build: ./dockerfiles/mvc
    container_name: penya
    hostname: penya
    volumes:
      - ./data/penya:/var/www/html
    depends_on:
      - db
    environment:
      - VIRTUAL_HOST=penya.local
    restart: always
    networks:
      - frontend
      - backend      
  biblioteca2:
    build: ./dockerfiles/mvc
    container_name: biblioteca2
    hostname: biblioteca2
    volumes:
      - ./data/biblioteca2:/var/www/html
    depends_on:
      - db
    environment:
      - VIRTUAL_HOST=biblioteca2.local
    restart: always
    networks:
      - frontend
      - backend      
  penya2:
    build: ./dockerfiles/mvc
    container_name: penya2
    hostname: penya2
    volumes:
      - ./data/penya2:/var/www/html
    depends_on:
      - db
    environment:
      - VIRTUAL_HOST=penya2.local
    restart: always
    networks:
      - frontend
      - backend      
  biblioteca:
    build: ./dockerfiles/mvc
    container_name: biblioteca
    hostname: biblioteca
    volumes:
      - ./data/biblioteca:/var/www/html
    depends_on:
      - db
    environment:
      - VIRTUAL_HOST=biblioteca.local
    restart: always
    networks:
      - frontend
      - backend      
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    links:
      - db:db
    environment:
      - MYSQL_USERNAME=root
      - MYSQL_ROOT_PASSWORD=password
      - PMA_HOST=db
      - VIRTUAL_HOST=phpmyadmin.docker
    networks:
      - frontend
      - backend
networks:
  frontend:
  backend:
